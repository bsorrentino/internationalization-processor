Introduction

 The release 1.2 not only contains a <<Java Annotation Processor>> but also useful class(s) that help to manage I18N tasks


Use MessageFactory class

 The framework provides a very useful MessagesFactory class that create a Proxy "on-the-fly" around a chosen interface. 
 This proxy will create a bridge from interface and Resource Bundle. By convention the resource bundle file (.properties), related to a interface, must have the same name of interface and must be located in the same package

 <<An Example>>

+-------------------------------------------+
 //
 // I18N interface
 //
 package test;
 public interface  IMessages {

    /** this method allow to access directly to resource bundle */
    String getString( String key );

    String unknow(); 
    String fileNotFound( String fileName );
 }

 //
 // Usage
 //
 IMessages m = MessagesFactory.createInstance( IMessages.class, null);

 System.out.println( m.fileNotFound("MyFile.txt"));
 System.out.println( m.unknow());

 //
 // test/IMessages_it.properties
 //
 fileNotFound=Il file {0} non e' stato trovato
 unknow=Un problema imprevisto e' accaduto. Richiedere l'intervento del supporto
+-------------------------------------------+

Use GwtMessageFactory class

 This class provides a useful Proxy that is compliant with I18N Interface generate by GWT (2.0 and above). So we can use the same interface both on client and server side


Generate I18N interface(s)

 This is an <<OPTIONAL>> task designed to be used joined with a {{{http://code.google.com/p/maven-annotation-plugin/}maven-annotation-plugin}}

Usage

  To use processor you have to do the following steps:
  
  [[1]] Create a file containing messages. (OPTIONAL)
  
  [[2]] Add dependency of processor in your POM.
  
  [[3]] Run processor using maven-annotation-plugin.
  
 * <<Create a file containing messages>>

 The messages must be put in the properties file.
 This file must be <<reachable from classpath>> and the name of each property must be compliant with <<java method name syntax>> otherwise will be ignored.

 * <<Add dependency of processor in your POM>>
 
 Add to your pom the following dependency

+-------------------------------------------+

    <dependency>
          <groupId>org.bsc.processor</groupId>
          <artifactId>resource-processor</artifactId>
          <version>1.2</version>
          <type>jar</type>
    </dependency>

+-------------------------------------------+

 And add repository declaration 

+-------------------------------------------+

<repositories>
    <repository>
      <id>internationalization-processor</id>
      <url>http://internationalization-processor.googlecode.com/svn/mavenrepo</url>
    </repository>
</repositories>

+-------------------------------------------+

  
 * <<Run processor using maven-annotation-plugin>>
 
An Example

+-------------------------------------------+

</plugin>
    <plugin>
      <groupId>org.bsc.maven</groupId>
      <artifactId>maven-processor-plugin</artifactId>
      <version>1.3.6</version>
      <executions>
        <execution>
          <id>process</id>
          <goals>
            <goal>process</goal>
          </goals>
          <phase>generate-sources</phase>
          <configuration>
             <outputDirectory>${basedir}/target/generated-sources/processor</outputDirectory>          
             <failOnError>false</failOnError>
              
             <processors>
                <processor>org.bsc.processor.implementation.ResourceProcessorInterface</processor>
             </processors>
             <compilerArguments>

                 <!--
                    name of interface that will be generated
                    In this case the resource org/bsc/processor/test/Imessages.properties will be used
                 -->
                -Ainterface=org.bsc.processor.test.IMessages
             </compilerArguments>
          </configuration>

        </execution>
      </executions>
    </plugin>

+-------------------------------------------+

 And add the plugin repository declaration

+-------------------------------------------+

<pluginRepositories>
    <pluginRepository>
      <id>maven-annotation-plugin</id>
      <url>http://maven-annotation-plugin.googlecode.com/svn/trunk/mavenrepo</url>
    </pluginRepository>
</pluginRepositories>

+-------------------------------------------+
 
 
  
 